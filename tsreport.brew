---
output: 
  pdf_document:
    keep_tex: <% keep_tex %>
documentclass: article
classoption: 
  - twoside
params:
  year: 666
  month: 6
  tslist: list()
header-includes:
  - \usepackage{geometry}
  - \geometry{a4paper, left=16mm, right=16mm, top=8mm, bottom=6mm, headsep=11mm, includeheadfoot}
  - \setlength{\columnsep}{10mm}
---
\twocolumn
```{r, echo = FALSE}
<%= cat(sprintf("global_theme <- init_tsplot_theme(\n    %s)\n\n", 
        paste(
          sprintf("%s = %s", 
                  names(spec$global_tsplot_theme),
                  spec$global_tsplot_theme),
          collapse =",\n    ")
        ))-%>
```

<% for(i in seq_along(spec$boxes)) { 
  plt <- spec$boxes[[i]]
  
  parms <- plt$tsplot_params
    if(!is.null(plt$plot_title)) {
      parms$plot_title <- plt$plot_title
    }
    if(!is.null(plt$plot_subtitle)) {
      parms$plot_subtitle <- plt$plot_subtitle
    }
-%>
<%  if(is.null(plt$type) || plt$type == "plot") { %>
```{r, fig.align='right', fig.height=4.5, echo = FALSE}
  local_theme <- global_theme
<% if(!is.null(plt$theme)) { -%>
<%# More readable this way instead of one super assignment via keys %>
<%    cat(sprintf("%s\n\n", 
          paste(sprintf("local_theme$%s = %s", names(plt$theme), plt$theme), collapse = "\n")
          ))-%>
<% } -%>
<%# TODO: Filter out params not part of formals(tsplot) (and theme too) %>
<%    cat(sprintf("tsplot(\n%s%s%s)\n\n",
          ifelse(is.null(plt$labels),
                 sprintf("    list(%s)", paste(sprintf("tslist$%s", plt$series), collapse = ",\n")),
                 paste(sprintf("    \"%s\" = tslist$%s", plt$labels, plt$series), collapse = ",\n")),
          ifelse(is.null(plt$tsplot_params),
                 "",
                 paste0(",\n", paste(sprintf("    %s = %s", names(plt$tsplot_params), plt$tsplot_params), collapse = ",\n"))),
          ifelse(is.null(plt$theme), "", ",\n    theme = local_theme")
  ))-%>
```
<% } else { %>
\fbox{\parbox[c][2.5in]{\linewidth}{
<%= plt$content %>
\vfill
}}
<% } %>
<% if(i %% 3 == 0) { %>
\eject
<% } else { %>
\vfill
<% } %>

<%}-%>

<% if(i %% 3 > 0) {
    for(j in 1:(3-(i%%3))) { %>
\vfill
\fbox{\parbox[c][2.5in]{\linewidth}{
I R a fillar
\vfill
}}
<% }
}%>

